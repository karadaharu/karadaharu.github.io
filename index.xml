<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kazumasa KANEKO</title>
    <link>http://karadaharu.org/</link>
    <description>Recent content on Kazumasa KANEKO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 05 Mar 2016 13:52:33 +0900</lastBuildDate>
    <atom:link href="http://karadaharu.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>hilty and bosch</title>
      <link>http://karadaharu.org/works/hilty-and-bosch/</link>
      <pubDate>Sat, 05 Mar 2016 13:52:33 +0900</pubDate>
      
      <guid>http://karadaharu.org/works/hilty-and-bosch/</guid>
      <description>

&lt;h2 id=&#34;hilty-bosch-dance-live:eb30ec25b6ac5289172c5c2903da3d94&#34;&gt;Hilty&amp;amp;Bosch Dance live&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://karadaharu.org/about/</link>
      <pubDate>Sat, 05 Mar 2016 13:19:40 +0900</pubDate>
      
      <guid>http://karadaharu.org/about/</guid>
      <description>

&lt;h2 id=&#34;profile:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;PROFILE&lt;/h2&gt;

&lt;h2 id=&#34;education:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;EDUCATION&lt;/h2&gt;

&lt;h2 id=&#34;work-experience:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;WORK EXPERIENCE&lt;/h2&gt;

&lt;h2 id=&#34;contact:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;CONTACT&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>PUBLICATIONS</title>
      <link>http://karadaharu.org/publications/</link>
      <pubDate>Sat, 05 Mar 2016 13:19:40 +0900</pubDate>
      
      <guid>http://karadaharu.org/publications/</guid>
      <description>

&lt;h2 id=&#34;jounal-papers:480c4de99851329b51acecc000e2e84f&#34;&gt;JOUNAL PAPERS&lt;/h2&gt;

&lt;h2 id=&#34;international-conferences:480c4de99851329b51acecc000e2e84f&#34;&gt;INTERNATIONAL CONFERENCES&lt;/h2&gt;

&lt;h2 id=&#34;domestic-conferences-symposiums:480c4de99851329b51acecc000e2e84f&#34;&gt;DOMESTIC CONFERENCES &amp;amp; SYMPOSIUMS&lt;/h2&gt;

&lt;h2 id=&#34;media-coverage:480c4de99851329b51acecc000e2e84f&#34;&gt;MEDIA COVERAGE&lt;/h2&gt;

&lt;h2 id=&#34;awards-honors:480c4de99851329b51acecc000e2e84f&#34;&gt;AWARDS / HONORS&lt;/h2&gt;

&lt;h2 id=&#34;fundings:480c4de99851329b51acecc000e2e84f&#34;&gt;FUNDINGS&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Android開発</title>
      <link>http://karadaharu.org/memo/coding/Android%E9%96%8B%E7%99%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/Android%E9%96%8B%E7%99%BA/</guid>
      <description>

&lt;h1 id=&#34;android開発:b20f521c6af2e7eb7d4c73515d62220d&#34;&gt;Android開発&lt;/h1&gt;

&lt;h2 id=&#34;ファイル構成:b20f521c6af2e7eb7d4c73515d62220d&#34;&gt;ファイル構成&lt;/h2&gt;

&lt;p&gt;manifests
 AndroidManifest.xml
java
 com.example.kazumasa.test22
  MainActivity
 com.example.kazumasa.test22
  ApplicationTest
res
 drawable
  ic_lancher.png
 layout
  activity_main.xml
 menu
  menu_main.xml
 values
  dmens.xml
  strings.xml
  styles.xml&lt;/p&gt;

&lt;h2 id=&#34;javaのキホン:b20f521c6af2e7eb7d4c73515d62220d&#34;&gt;Javaのキホン&lt;/h2&gt;

&lt;p&gt;クラス名を一意に決めるために、パッケージというという仕組みでクラスを
フォルダにまとめたものを一意に決めることができる。&lt;/p&gt;

&lt;p&gt;JAR:コンパイルされたjavaをひとつにzipでまとめたもの。&lt;/p&gt;

&lt;p&gt;Javadoc:クラスやメソッドのコメントから自動でドキュメントを作成してくれるツール&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>20151014ソースコードが違う</title>
      <link>http://karadaharu.org/memo/coding/00%E4%B8%80%E8%88%AC/20151014%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%88%E3%82%99%E3%81%8B%E3%82%99%E9%81%95%E3%81%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/00%E4%B8%80%E8%88%AC/20151014%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%88%E3%82%99%E3%81%8B%E3%82%99%E9%81%95%E3%81%86/</guid>
      <description>&lt;p&gt;結局コミットしわすれていた&lt;/p&gt;

&lt;p&gt;&lt;em&gt;最初にソースコードの違い、人のミスを疑うべき&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;流れ&lt;/p&gt;

&lt;p&gt;string json_encode();&lt;/p&gt;

&lt;p&gt;エスケープする可能性があるもの&lt;/p&gt;

&lt;p&gt;Apache
PHP
CMS
PHPTAL&lt;/p&gt;

&lt;p&gt;開発と本番で差があるのは何か？&lt;/p&gt;

&lt;p&gt;開発
nginx 1.8.0
php 5.6.12
gulp 3.9.0&lt;/p&gt;

&lt;p&gt;本番
php 5.6.12&lt;/p&gt;

&lt;p&gt;confファイル
APP_MODE
CACHE_LIFETIME&lt;/p&gt;

&lt;p&gt;トップページは直書きでOKになってる&lt;/p&gt;

&lt;p&gt;magic quotes
htmlspecialchars() 特殊文字をHTMLエンティティに変換する　htmlentities()も同じ&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>FreeBSDでのパッケージ管理</title>
      <link>http://karadaharu.org/memo/coding/FreeBSD/FreeBSD%E3%81%A6%E3%82%99%E3%81%AE%E3%83%8F%E3%82%9A%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B7%E3%82%99%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/FreeBSD/FreeBSD%E3%81%A6%E3%82%99%E3%81%AE%E3%83%8F%E3%82%9A%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B7%E3%82%99%E7%AE%A1%E7%90%86/</guid>
      <description>

&lt;h1 id=&#34;freebsdでのパッケージ管理:6be24f3c3d8297947e6ac94ed926aac6&#34;&gt;FreeBSDでのパッケージ管理&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://www.freebsd.org/doc/ja_JP.eucJP/books/handbook/ports.html&#34;&gt;https://www.freebsd.org/doc/ja_JP.eucJP/books/handbook/ports.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;package:6be24f3c3d8297947e6ac94ed926aac6&#34;&gt;package&lt;/h3&gt;

&lt;p&gt;ソフトウェアのインストール方法
* コンパイル済みのパッケージ→pkg_*からpkgngになった
* ソースからコンパイルするports:こっちのほうがfreeBSDでは人気らしい。オプションとかが色々設定できる&lt;/p&gt;

&lt;p&gt;Pythonマニュアルにかかれているこれはだめ
pkg_add -r python
&lt;a href=&#34;http://docs.python.jp/2/using/unix.html&#34;&gt;http://docs.python.jp/2/using/unix.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;pkgng:新しい管理ツール
pkgngにしたら、pkg_* は使うべきではない
portmasterなどを置き換えるものではない。&lt;/p&gt;

&lt;p&gt;packageでインストールしたソフトウェアの関連ソフトウェアは
/usr/local/etc/内に入る&lt;/p&gt;

&lt;p&gt;サービスを実行するためのファイルは/etc/rc.d/下に入るが，
実際にサービスを実行するためには/etc/rc.confに書かないといけない．&lt;/p&gt;

&lt;h3 id=&#34;portsの使い方:6be24f3c3d8297947e6ac94ed926aac6&#34;&gt;portsの使い方&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.freebsd.org/doc/ja_JP.eucJP/books/handbook/ports-using.html&#34;&gt;https://www.freebsd.org/doc/ja_JP.eucJP/books/handbook/ports-using.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ports Collectionの利用
Ports Collection とは、/usr/ports 以下に置かれる Makefile, 修正パッチ、 説明文などの一連のファイルのことです。&lt;/p&gt;

&lt;h4 id=&#34;初期設定:6be24f3c3d8297947e6ac94ed926aac6&#34;&gt;初期設定&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# portsnap fetch
# portsnap extract
# portsnap fetch
# portsnap update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;勝手にportsツリーが変わっちゃうと困るときはsubversionで管理する&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>FreeBSDでのユーザーのしくみ</title>
      <link>http://karadaharu.org/memo/coding/FreeBSD/FreeBSD%E3%81%A6%E3%82%99%E3%81%AE%E3%83%A6%E3%83%BC%E3%82%B5%E3%82%99%E3%83%BC%E3%81%AE%E3%81%97%E3%81%8F%E3%81%BF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/FreeBSD/FreeBSD%E3%81%A6%E3%82%99%E3%81%AE%E3%83%A6%E3%83%BC%E3%82%B5%E3%82%99%E3%83%BC%E3%81%AE%E3%81%97%E3%81%8F%E3%81%BF/</guid>
      <description>

&lt;h1 id=&#34;freebsdでのユーザーのしくみ:a83760d81f5fb2874b12c55209763bac&#34;&gt;FreeBSDでのユーザーのしくみ&lt;/h1&gt;

&lt;h2 id=&#34;基本:a83760d81f5fb2874b12c55209763bac&#34;&gt;基本&lt;/h2&gt;

&lt;p&gt;グループ:wheel&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>:usr:binと:usr:local:bin</title>
      <link>http://karadaharu.org/memo/coding/:usr:bin%E3%81%A8:usr:local:bin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/:usr:bin%E3%81%A8:usr:local:bin/</guid>
      <description>

&lt;h1 id=&#34;usr-binと-usr-local-bin:7c034d05bb6e0d94e8e9b63b6f695740&#34;&gt;/usr/binと/usr/local/bin&lt;/h1&gt;

&lt;p&gt;/bin:もっとも基本的なコマンドmakeやwhoなど
/usr/bin:システム標準
/usr/local/bin:そうでないもの(OSが勝手に書き換えることはない)
/opt:アプリケーションごとにサブディレクトリを分けることを想定。大きいもの用。
/sbin:起動に必要なファイル
/etc:設定ファイル&lt;/p&gt;

&lt;p&gt;例えば、評価版は/usr/local/binにインストールして、コマンドパスを/usr/local/binを先にすれば、そっちが実行される。問題があればコマンドパスを戻せば良い&lt;/p&gt;

&lt;p&gt;コマンドのフルパスが知りたいときはwhereis&lt;/p&gt;

&lt;p&gt;launchd:PID 1で最初に起動して初期化、シェルの起動などを行う&lt;/p&gt;

&lt;h2 id=&#34;homebrewが指定しているサービス:7c034d05bb6e0d94e8e9b63b6f695740&#34;&gt;homebrewが指定しているサービス&lt;/h2&gt;

&lt;p&gt;~/Library/LaunchAgents/
にhombrewがサービスに指定しているファイルがある。
勝手に起動するように指定するかしないか。
&lt;a href=&#34;http://cockscomb.hatenablog.com/entry/2014/04/05/153451&#34;&gt;http://cockscomb.hatenablog.com/entry/2014/04/05/153451&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;その他:7c034d05bb6e0d94e8e9b63b6f695740&#34;&gt;その他&lt;/h2&gt;

&lt;p&gt;/opt
/include
/Library&lt;/p&gt;

&lt;h2 id=&#34;exportコマンド:7c034d05bb6e0d94e8e9b63b6f695740&#34;&gt;exportコマンド&lt;/h2&gt;

&lt;p&gt;例&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export PATH=$PATH:/Applications/android-sdk/tools
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;環境変数を設定するために使用．ターミナルからログアウトしたらリセットされる
→毎回ターミナル起動時に実行した→~/.bash_profileに記述しておく．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ターミナルの日本語環境</title>
      <link>http://karadaharu.org/memo/coding/FreeBSD/%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%81%AE%E6%97%A5%E6%9C%AC%E8%AA%9E%E7%92%B0%E5%A2%83/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/FreeBSD/%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%81%AE%E6%97%A5%E6%9C%AC%E8%AA%9E%E7%92%B0%E5%A2%83/</guid>
      <description>

&lt;h1 id=&#34;ターミナルの日本語環境:9668eb065dc46476bb95069698b89707&#34;&gt;ターミナルの日本語環境&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;ユーザーの言語設定&lt;/li&gt;
&lt;li&gt;シェルの言語設定&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;の2つを設定する&lt;/p&gt;

&lt;h2 id=&#34;ユーザーの言語設定:9668eb065dc46476bb95069698b89707&#34;&gt;ユーザーの言語設定&lt;/h2&gt;

&lt;p&gt;.login_conf
に&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;me:\
   :charset=UTF-8:\
   :lang=ja_JP.UTF-8:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を追記&lt;/p&gt;

&lt;h2 id=&#34;シェルの言語設定:9668eb065dc46476bb95069698b89707&#34;&gt;シェルの言語設定&lt;/h2&gt;

&lt;p&gt;.bashrc
に&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export LANG=ja_JP.UTF-8
export LANG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を追記&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GCC、LLVM、Clang</title>
      <link>http://karadaharu.org/memo/coding/GCC%E3%80%81LLVM%E3%80%81Clang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/GCC%E3%80%81LLVM%E3%80%81Clang/</guid>
      <description>

&lt;h2 id=&#34;brew-install-gccできない:4b6fdba91aaa0d5bf6f9cce1142e1d7f&#34;&gt;brew install gccできない&lt;/h2&gt;

&lt;p&gt;brew link gcc
Linking /usr/local/Cellar/gcc/4.8.3_1&amp;hellip;
Error: Could not symlink lib/gcc/x86_64-apple-darwin13.2.0
/usr/local/lib/gcc is not writable.
MBPkazu-2:site-packages kazumasa$ which gcc
/usr/bin/gcc&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/14527521/brew-doctor-says-warning-usr-local-include-isnt-writable&#34;&gt;sudo chown -R $USER /usr/local/include
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;gccとは:4b6fdba91aaa0d5bf6f9cce1142e1d7f&#34;&gt;gccとは&lt;/h2&gt;

&lt;p&gt;GNU Compiler Collection.様々な言語のコンパイラ&lt;/p&gt;

&lt;p&gt;LLVMはGCCとは別のコンパイラ。low level virtual compiler
ClangはLLVMの一部(?)C,C++,Objective-Cのコンパイラ。”LLVMはClangのバックエンド”という表現のしかたをする。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://easyramble.com/install-gcc-with-homebrew.html&#34;&gt;使い終わったら標準LLVMに戻したほうがいい？&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;clang-llvmとgccの違い:4b6fdba91aaa0d5bf6f9cce1142e1d7f&#34;&gt;Clang&amp;amp;LLVMとGCCの違い&lt;/h2&gt;

&lt;p&gt;ClangはLLVMが読み込める形のバイナリコードを吐き出す
LLVMはClangが吐き出したバイナリコードを読み込んで、それぞれのマシンのアーキテクチャ？にあわせた機械語を出力する
これによって、LLVMが読み込める形に出力できる各言語のClangに対応するものを作れば、どんな言語で書いたプログラムも動くことになる。
また、同じ言語で書いたプログラムで、OS XでもiOSでも動くようにできる。
openFrameworksでつくるiOSとかAndroidのアプリというのはそういうことらしい。&lt;/p&gt;

&lt;p&gt;一方、GCCは分離されていない。
ここを分離してしまうと、GCCの政治的な力が弱くなるため、らしい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bashを理解する</title>
      <link>http://karadaharu.org/memo/coding/Linux/bash%E3%82%92%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/Linux/bash%E3%82%92%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B/</guid>
      <description>&lt;p&gt;#bashを理解する
.bash_profileと.bashrcの違い
.bash_profileはログイン時のみ実行される
.bashrcは新しくシェルが起動される度に実行される。.bash_profileから呼ばれる形でも実行される。&lt;/p&gt;

&lt;p&gt;環境設定ファイルbash_profileの反映&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;パスを通す　~/.bashrcに下記をかいて，反映&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PATH=通したいディレクトリのパス:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;$PATHはすでに通っているパス変数
先に書いてあるパスが優先されるので，
$PATH:通したいディレクトリのパス，の順番だと同じコマンドの場合だめ&lt;/p&gt;

&lt;p&gt;コマンドのエイリアスを作成（例：sublime textを起動するsublコマンド）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ln -s &amp;quot;/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl&amp;quot; /usr/local/bin/subl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;シェルスクリプトで対話的作業を行う。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/expect
spawn ssh ebi@tempura.jp
expect &amp;quot;PASSWORD?&amp;quot;
send &amp;quot;password\n&amp;quot;
interact
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ftpは定形フォーマットをftpコマンドに食わせてやればOK&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sshで接続できない</title>
      <link>http://karadaharu.org/memo/coding/Linux/ssh%E3%81%A6%E3%82%99%E6%8E%A5%E7%B6%9A%E3%81%A6%E3%82%99%E3%81%8D%E3%81%AA%E3%81%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/Linux/ssh%E3%81%A6%E3%82%99%E6%8E%A5%E7%B6%9A%E3%81%A6%E3%82%99%E3%81%8D%E3%81%AA%E3%81%84/</guid>
      <description>

&lt;h1 id=&#34;sshで接続できない:c7c10a772b1970026ca58fea43d1194b&#34;&gt;sshで接続できない&lt;/h1&gt;

&lt;p&gt;いつも使っているサーバーにSSH接続しようとしたところ、下記エラーで接続できませんでした。&lt;/p&gt;

&lt;p&gt;ssh_exchange_identification: Connection closed by remote host&lt;/p&gt;

&lt;h2 id=&#34;sshとは:c7c10a772b1970026ca58fea43d1194b&#34;&gt;SSHとは&lt;/h2&gt;

&lt;p&gt;SSH:secure shellの略
ネットワークを介して別のコンピュータにログインして操作するためのソフトウェアのひとつ。&lt;/p&gt;

&lt;h2 id=&#34;サーバー側でアクセス元ipを制限している:c7c10a772b1970026ca58fea43d1194b&#34;&gt;サーバー側でアクセス元IPを制限している&lt;/h2&gt;

&lt;p&gt;/etc/hosts.deny
/etc/hosts.allow
で設定できます。これが変わっているのかどうかはサーバーに接続することができないので、管理者に問い合わせるしかなさそうです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NFS</title>
      <link>http://karadaharu.org/memo/coding/Linux/NFS/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/Linux/NFS/</guid>
      <description>

&lt;h1 id=&#34;nfs:09a0c2b06d675908fb18000132649dc4&#34;&gt;NFS&lt;/h1&gt;

&lt;p&gt;NFS:network file system
別のPCのディレクトリを共有する仕組み&lt;/p&gt;

&lt;p&gt;設定
/etc/exportsに書く&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>シェルスクリプトの書き方</title>
      <link>http://karadaharu.org/memo/coding/Linux/%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%95%E3%82%9A%E3%83%88%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/Linux/%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%95%E3%82%9A%E3%83%88%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9/</guid>
      <description>

&lt;h1 id=&#34;シェルスクリプトの書き方:c8ba59ae72b26216e67c2481b7b0c178&#34;&gt;シェルスクリプトの書き方&lt;/h1&gt;

&lt;p&gt;変数の宣言&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;string=&amp;quot;aaaa&amp;quot;
echo ${string}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;変数の=の両側にはスペースを入れてはいけない。入れると、変数名がコマンドとして受け取られる&lt;/em&gt;
&lt;em&gt;変数の中身を使いたいときは,${}で囲む。そうしないとコマンドや、文字列として受け取られる&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;forループ&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;files=*txt
for f in files
do
	echo ${f}
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if文&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if test hoge
else
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;対話的なコマンドの実行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
expect -c &amp;quot;
set timeout 400
spawn ftp ladsweb.nascom.nasa.gov
expect \&amp;quot;Name (ladsweb.nascom.nasa.gov:kazumasa):\&amp;quot;
send \&amp;quot;anonymous\n\&amp;quot;
expect \&amp;quot;Password:\&amp;quot;
send \&amp;quot;catter121@gmail.com\n\&amp;quot;
expect \&amp;quot;ftp&amp;gt;\&amp;quot;
send \&amp;quot;cd /orders/\n\&amp;quot;
expect \&amp;quot;ftp&amp;gt;\&amp;quot;
send \&amp;quot;binary\&amp;quot;
expect \&amp;quot;ftp&amp;gt;\&amp;quot;
&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;respawnだとシェルのコマンドが打てる&lt;/li&gt;
&lt;li&gt;最後は\n入れないとエンターにならない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ecpect はTclの文法をわかっていないと戸惑うらしい。
&lt;a href=&#34;http://root-mode2.blogspot.jp/2010/10/expect-spawn.html&#34;&gt;http://root-mode2.blogspot.jp/2010/10/expect-spawn.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;テキストファイルを一行ずつ読み込む&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;while read line
do
	echo $line
done &amp;lt; test.txt
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>unixコマンド覚書</title>
      <link>http://karadaharu.org/memo/coding/Linux/unix%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%88%E3%82%99%E8%A6%9A%E6%9B%B8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://karadaharu.org/memo/coding/Linux/unix%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%88%E3%82%99%E8%A6%9A%E6%9B%B8/</guid>
      <description>

&lt;h1 id=&#34;unixコマンド覚書:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;UNIXコマンド覚書&lt;/h1&gt;

&lt;h2 id=&#34;mkdir:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;mkdir&lt;/h2&gt;

&lt;p&gt;再帰的?にフォルダを作成する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p /dir1/dir2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;連番でフォルダ名を作成する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir {2007..2010}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;シンボリックリンクを作成する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ln -s source atesaki
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ハードリンクとシンボリックリンク
ハードリンク:ファイルに対してのみ
直接ファイル本体へリンク．ファイルが2つあるように扱われる．
シンボリックリンク:フォルダもOK
ファイルの位置情報が記録される．本体のほうのファイルを削除するとシンボリックリンク先はエラーになる．&lt;/p&gt;

&lt;p&gt;プロセスを強制終了させる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ kill -9 PID
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;touch:新規に空ファイルをつくる(本来はタイムスタンプを作成)&lt;/li&gt;
&lt;li&gt;gpasswd:ユーザーグループを管理．アクセス権限など&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ln:ファイルやディレクトリにリンクをはる&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;symlink:&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;rsync -nav /from /to:コピーする&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ln:リンクをはる&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;passwd:パスワードを変える&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;cpコマンドは使わない&lt;/strong&gt;
フォルダをコピーするときなど，間違って上書きする可能性がある&lt;/p&gt;

&lt;h2 id=&#34;find:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;find&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ find ./ -name &amp;quot;hoge&amp;quot; -ls
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ディレクトリ以下のすべてのファイルを検索&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find ./ -type f -print | xargs grep &#39;hoge&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;curl:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;curl&lt;/h2&gt;

&lt;p&gt;-O:ファイルに出力する
-L:リダイレクトに対応する
-o filename:ファイル名を指定するときは小文字
URLに&amp;amp;や?が入ってるときは&amp;rdquo;でURLをくくってひとまとまりにする&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ out &amp;gt; in # 上書き
$ out &amp;gt;&amp;gt; in # 追加
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;.bashrcのパスの追加
PATH=&amp;ldquo;$PATH&amp;rdquo;:/usr/local/postfix
&amp;ldquo;$PATH&amp;rdquo;は現状のパス設定を保持したままで:に続くパスを追加する&lt;/p&gt;

&lt;p&gt;OSの確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ uname -a
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;tar:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;tar&lt;/h2&gt;

&lt;p&gt;txz:xz形式で圧縮したもの&lt;/p&gt;

&lt;p&gt;tar jxvf file.tar.bz2&lt;/p&gt;

&lt;p&gt;v:ファイルの詳細を表示&lt;/p&gt;

&lt;h3 id=&#34;アーカイブ操作:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;アーカイブ操作&lt;/h3&gt;

&lt;p&gt;x:取り出す&lt;/p&gt;

&lt;h3 id=&#34;圧縮方式:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;圧縮方式&lt;/h3&gt;

&lt;p&gt;j:bzip2用
z:gzip用&lt;/p&gt;

&lt;h2 id=&#34;ソースコードからインストール:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;ソースコードからインストール&lt;/h2&gt;

&lt;p&gt;基本的気に、INSTALLファイルを読めばできるようになってる。
&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1106/24/news112.html&#34;&gt;http://www.atmarkit.co.jp/ait/articles/1106/24/news112.html&lt;/a&gt;
このへんあとでちゃんと読みたい。
./configure &amp;ndash;prefix=$HOME
で$HOMEにインストールされる。&lt;/p&gt;

&lt;h2 id=&#34;ユーザー操作:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;ユーザー操作&lt;/h2&gt;

&lt;p&gt;ユーザー一覧
/etc/passwd&lt;/p&gt;

&lt;p&gt;現在ログインしているユーザー
who
whoをしてもvagrantだけど
実際はpostgresってどうなってるの？？&lt;/p&gt;

&lt;p&gt;パスワードの変更
passwd&lt;/p&gt;

&lt;p&gt;kaneko is not in the sudoers file.  This incident will be reported.&lt;/p&gt;

&lt;p&gt;ユーザーの削除
rmuser kaneko&lt;/p&gt;

&lt;p&gt;ファイルなどのグループの変更
chgrp GROUP FILE&lt;/p&gt;

&lt;p&gt;ファイルなどのユーザーの変更
chown&lt;/p&gt;

&lt;h2 id=&#34;scp:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;scp&lt;/h2&gt;

&lt;p&gt;送信　送信ファイル　送信先ディレクトリ
scp -P 10022 /tmp/localfile.txt RemoteUser@remote.domein.co.jp:/tmp/
受信　受信ファイル　受信先ディレクトリ
scp -P 10022 RemoteUser@remote.domein.co.jp:/tmp/remotefile.txt /home/LocalUser/tmp/&lt;/p&gt;

&lt;p&gt;コマンドプロンプトの表示設定を見る　echo $PS1
ホスト名を表示 hostname&lt;/p&gt;

&lt;h2 id=&#34;rsync:5f87f8a09885bfb6f19fef259a5c96ff&#34;&gt;rsync&lt;/h2&gt;

&lt;p&gt;rsync -nav &amp;ndash;exclude-from .rsyncignore ./dev.jfdb.jp/ ./jfdb.jp/&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>